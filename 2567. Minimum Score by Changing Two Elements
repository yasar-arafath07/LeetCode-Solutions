class Solution{
public:
    int minimizeSum(vector<int>& nums){
        // Approach: SORTING
        // TC : O(N*logN)
        // SC : O(1)
        // C++ CODE:
        int n = nums.size();

        // EDGE CASE:
        if(n <= 3) return 0;

        // sort the Input Array
        sort(nums.begin(), nums.end());

        // else, we have 3 cases
        int case1 = nums[n-1] - nums[2]; // this is the score when we make the first 2 numbers equal to 3rd element (low=0)
        int case2 = nums[n-3] - nums[0]; // score when we make last 2 elements as equal to last 3rd element
        int case3 = nums[n-2] - nums[1]; // score when we make first and last element equal 

        int ans = min({case1, case2, case3}); // return the minimum out of all the three

        return ans;
    }
};

/*
// EXPLANATION:
// CASE 1: Remove the smallest 2 elements
// CASE 2: Remove the largest 2 elements
// CASE 3: Remove the smallest and the largest element
