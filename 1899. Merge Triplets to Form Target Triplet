class Solution{
public:
    bool mergeTriplets(vector<vector<int>>& triplets, vector<int>& target){
        // Approach: GREEDY
        // TC : O(N)
        // SC : O(1)
        // C++ CODE:
        int a = 0;
        int b = 0;
        int c = 0;

        // Traverse the I/p Array 'triplets'
        // and if all the elements of the current Array 'arr' is less than or equal to all the elements of 'target' Array
        // at respective positions, then only update the values of a, b and c.
        for(auto& arr : triplets){
            if(arr[0] <= target[0] && arr[1] <= target[1] && arr[2] <= target[2]){
                a = max(a, arr[0]);
                b = max(b, arr[1]);
                c = max(c, arr[2]);
            }
        }
        // Now, check if the values of 'a', 'b', and 'c' matches with the target elements at respective positions.
        // If YES, return 'true', else return 'false'
        if(a == target[0] && b == target[1] && c == target[2]){
            return true;
        }
        else{
            return false;
        }
    }
};
