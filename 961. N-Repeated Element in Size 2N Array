class Solution {
public:
    int repeatedNTimes(vector<int>& nums){
        // Approach 2: Using Hashmap
        // TIME COMPLEXITY : O(n) 
        unordered_map<int,int> map;
        int length = nums.size();
        int n = length / 2;
        
        for(int i=0; i<nums.size(); i++){
            map[nums[i]]++;
            if(map[nums[i]] == n)
                return nums[i];
        }
        return 0;
        
        
        /*
        //Approach 1: Using SORTING
        // TIME COMPLEXITY : O(nlogn)
        sort(nums.begin(), nums.end());
        
        for(int i=0; i<nums.size(); i++){
            if(nums[i] == nums[i+1]){
                return nums[i];
            }
        }
        return 0;
        */
    }
};

