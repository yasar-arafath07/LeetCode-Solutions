class Solution{
public:
    int minDeletion(vector<int>& nums){
        // Approach: GREEDY
        // TC : O(N)
        // SC : O(1)
        // C++ CODE:
        int n = nums.size();
        int shift = 0; // Basicallly the no. of element's we need to delete to make the Array beautiful.

        // Traverse the Array
        for(int i=0; i<n-1; i++){
            // Check if the Index is divisible by 2, then only go for checking the Adjacent elements
            // Shift represents that we shifted the elements by 'shift' no. of positions
            if((i+shift) % 2 == 0){
                // Check the Adjacent elements
                if(nums[i] == nums[i+1]){
                    shift++;
                }
            }
        }
        // Now, check the size of the Array. If the size is odd, delete the last element. So, 'shift++'.
        if((n - shift) % 2 == 1){
            shift++;
        }
        return shift;
    }
};
