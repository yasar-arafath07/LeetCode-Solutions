class Solution {
public:
    int missingNumber(vector<int>& nums) {
        // APPROACH: BINARY SEARCH
        sort(nums.begin(), nums.end());
        int low = 0, high = nums.size()-1;
        while(low <= high){
            int mid = (low + high)/2;
            if(nums[mid] > mid)
                high = mid - 1;
            else
                low = mid + 1;
        }
        return low;
        
        /*
        // APPROACH : SORTING (Doesn't Work)
        int n = nums.size();
        sort(nums.begin(), nums.end());
        int ans = n;
        for(int i=0; i<n; i++){
            if(nums[i] != i)
                ans = i;
                break;
        }
        return ans;
        */
    
    }

};

/*
Approach: SORTING
TIME COMPLEXITY: O(NlogN)
SPACE COMPLEXITY: O(1)
*/
