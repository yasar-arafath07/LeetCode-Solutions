class Solution {
public:
    char repeatedCharacter(string s) {
        /*
        // Approach 1: Using unordered_map
        unordered_map<char, int> mpp; // for storing occurences of char
        char ans;  // to store the answer
        
        for(auto it : s){
            if(mpp.find(it) != mpp.end()){ // any char which appears twice first will be the answer
                ans = it;
                break;
            }
            mpp[it]++;  // increase the count of char
        }
        return ans;  
        */
        
        
        
        // Approach 2: Using Set
        set<char> set;
        char ans; 
        
        for(auto& it : s){  // & is optional
            if(set.find(it) != set.end()){
                ans = it;
                break;
            }
            set.insert(it);
        }
        return ans;
    }
};
