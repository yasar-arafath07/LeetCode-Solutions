class Solution{
public:
    string makeGood(string s){
        // Approach: 
        // TC : O(N)
        // SC : O(N), to create a copy of the string
        // CODE:
        string ans;

        for(int i=0; i<s.size(); i++){
            // put the character from string s into the answer string
            ans.push_back(s[i]);

            // Now, check if adjacent characters are bad
            while(ans.size() != 0 && (ans.back() == s[i+1]+32 || ans.back() == s[i+1]-32)){
                ans.pop_back();
                i++;  // we skip the bad adjacent characters
            }  
        }
        return ans;
    }
};
