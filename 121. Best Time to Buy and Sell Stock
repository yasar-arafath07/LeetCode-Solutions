class Solution{
public:
    int maxProfit(vector<int>& prices){
        // Approach: GREEDY
        // TC : O(N)
        // SC : O(1)
        // C++ CODE:
        int maxPro = INT_MIN; // OR take as '0'
        int minPrice = prices[0]; // OR take as 'INT_MAX'

        // Traverse the i/p Array
        for(int i=0; i<prices.size(); i++){
            minPrice = min(minPrice, prices[i]); // find the 'minPrice' till day 'i'
            maxPro = max(maxPro, prices[i] - minPrice); // maxPro=prices[i]-minPrice i.e maxPro=Selling price-Buying price
        }
        return maxPro; // return the maximum profit
    }
};


/*
- 'minPrice' is the minimum Price from day 0 to day i. and 'maxPro' is the maximum Profit we can get from day 0 to day 'i'
*/
