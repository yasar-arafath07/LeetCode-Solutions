class Solution{
public:
    bool halvesAreAlike(string s){
        // Approach 2: 
        // TC : O(N)
        // SC : O(1)
        // C++ CODE:
        int n = s.size();
        int mid = n/2;
        int count = 0;

        for(int i=0; i<n; i++){
            // convert all the characters of string to lwercase using tolwercase() function of c++ STL
            s[i] = tolower(s[i]);  // if the char is already in lower case, nothing will be changed

            // for the 1st half of the string
            if(i < mid){
                // no need to check for uppercase vowels, since we have converted all uppercase into lowercase
                // if(s[i] == 97 || s[i] == 101 || s[i] == 105 || s[i] == 111 || s[i] == 117)
                if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){
                    count++;
                }
            }
            else{
                // for the 2nd half of the string
                // if(s[i] == 97 || s[i] == 101 || s[i] == 105 || s[i] == 111 || s[i] == 117)
                if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){
                    count--; // decrement the count if vowels occurs in 2nd half of the string
                }
            }
        }
        return (count == 0); // if(count == 0) return true, else return false;



        /*
        // Approach 1: BRUTE FORCE
        // TC : O(N)
        // SC : O(1)
        // C++ CODE:
        int n = s.size(); 
        int mid = n/2; 

        int count1 = 0; // stores the total no. of vowels in 1st half
        int count2 = 0; // stores the total no. of vowels in 2nd half of the string
        
        // traverse the 1st half of the string and parallelly count the occurence of vowels
        for(int i=0; i<mid; i++){
            if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u' || s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i] == 'O' || s[i] == 'U'){
                count1++;
            }
        }

        // similarly traverse the 2nd half of the string and record the occurence of vowels in the 2nd half
        for(int i=mid; i<n; i++){
            if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u' || s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i] == 'O' || s[i] == 'U'){
                count2++;
            }
        }

        // compare count1 and count2
        if(count1 == count2){
            return true;
        }
        return false;
        */
    }
};
