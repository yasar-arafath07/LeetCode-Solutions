class Solution {
public:
    vector<int> sortEvenOdd(vector<int>& nums) {
        vector<int> even, odd; // maintaining 2 vectors to store even indice and odd indice values separately
        vector<int> ans; //to store the final result
        
        for(int i=0; i<nums.size(); i++){
            if(i%2 == 0)
                even.push_back(nums[i]);//if the index value is divisible by 2,then we add value at that index to even
            else
                odd.push_back(nums[i]);  // else we add the value at that index to odd vector
        }
        
        // sort even and odd array/vector
        sort(even.begin(), even.end()); // sorting even vector in increasing order according to the question
        sort(odd.begin(), odd.end(), greater<int>());// sorting odd vector in decreasing order according to question
        
        int i=0, j=0;
        while(i<even.size() || j<odd.size()){
            if(i<even.size())
                ans.push_back(even[i]);
                i++;   // OR increment directly above even[i++];
            if(j<odd.size())
                ans.push_back(odd[j]);
                j++;
        }
        return ans;
    }
};

/*
Instead of running a while loop, we can also run a single for loop to insert the values into the ans vector as below:

for(int i=0; i<even.size(); i++){
    if(i<even.size())
        ans.push_back(even[i]);
    if(i<odd.size())
        ans.push_back(odd[i]);
}
return ans;

*/
