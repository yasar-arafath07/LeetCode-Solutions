class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        
        /********* BINARY SEARCH APPROACH 1 ***********/
        
        int low = 0, high = nums.size()-1;
        
        while(low <= high){
            int mid = low + (high - low)/2;   // i.e mid = (low + high)/2
        
            if(target > nums[mid])
                low = mid + 1;
            else
                high = mid - 1;
        }
        return low;
        
        /******** BINARY SEARCH APPROACH 2 ***********/
        
        /*
        int low = 0, high = nums.size()-1;
        
        while(low <= high){
            int mid = low + (high - low)/2;   // i.e mid = (low + high)/2
        
            if(target > nums[mid])
                low = mid + 1;
            else if(target < nums[mid])
                high = mid - 1;
            else
                return mid;
        }
        return low;
        */
            
    }
};
