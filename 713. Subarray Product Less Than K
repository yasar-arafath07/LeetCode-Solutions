class Solution {
public:
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        int count = 0; // stores the subarrays whose product of all the elements is less than k
        int prod = 1;  // initial product
        int i = 0; // windowStart
        int j = 0; // windowEnd
        
        // EDGE Case:
        if(k == 0){
            return 0;
        }

        for(int j=0; j<nums.size(); j++){
            // CALCULATION:
            prod *= nums[j];  // prod = prod * nums[j]
            
            // If the Condition exceeds i.e if product becomes more or equal to k, we shrink the window
            // Before we sheink the window, we remove calculation for i and then we shrink by doing i++
            while(i<=j && prod >= k){
                prod /= nums[i]; // prod = prod / nums[i]
                i++;
            }
            // Pick an Answer
            count = count + (j-i+1); // 'count = count + windowSize'
        }
        return count;
    }
};
